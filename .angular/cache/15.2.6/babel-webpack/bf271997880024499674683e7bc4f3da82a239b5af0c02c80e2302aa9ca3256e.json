{"ast":null,"code":"import { forwardRef } from '@angular/core';\nimport { RadioTemplateDirective } from './radio-template.directive';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction RadioGroupComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"div\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n}\nexport let RadioGroupComponent = /*#__PURE__*/(() => {\n  class RadioGroupComponent {\n    constructor() {\n      this.onChange = value => {};\n      this.onTouched = () => {};\n    }\n    ngOnInit() {}\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    writeValue(value) {\n      this.value = value;\n    }\n    setDisabledState(disabled) {\n      this.disabled = disabled;\n    }\n  }\n  RadioGroupComponent.ɵfac = function RadioGroupComponent_Factory(t) {\n    return new (t || RadioGroupComponent)();\n  };\n  RadioGroupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RadioGroupComponent,\n    selectors: [[\"app-radio-group\"]],\n    contentQueries: function RadioGroupComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, RadioTemplateDirective, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.content = _t.first);\n      }\n    },\n    inputs: {\n      items: \"items\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => RadioGroupComponent),\n      multi: true\n    }])],\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"flex\"], [4, \"ngFor\", \"ngForOf\"], [1, \"flex\", \"flex-col\"]],\n    template: function RadioGroupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, RadioGroupComponent_ng_container_1_Template, 2, 0, \"ng-container\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.items);\n      }\n    },\n    dependencies: [i1.NgForOf]\n  });\n  return RadioGroupComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}